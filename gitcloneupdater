#!/bin/bash
#gitcloneupdater
#Created by Matt Allbright
#The intent for this script is to automatically clone the repository on boot,
#then copy all software directly into the default dirs (def /usr/local/bin)

#Loads entire script into memory as it will be overwritten
{

  #Checks for proper folder in /opt/gitupdate
  if [[ -d /opt/gitupdate/staging ]]; then

    #Cleans folder for git clone (required by git)
    rm -rf /opt/gitupdate/staging

  fi

  #Then clones git
  echo "Cloning git!"

  git clone "git://github.com/mattallbright/uascanlab" /opt/gitupdate/staging/

  #Checks for proper folder in /opt/gitupdate
  if [[ ! -d /opt/gitupdate/deployed ]]; then

    #Makes folder for git clone to deploy to
    echo -en '\n'
    echo "Creating deployment directory!"
    mkdir /opt/gitupdate/deployed

  fi

  #Create array of all file names
  cd /opt/gitupdate/staging
  arr=( * )

  #Permissions modification
  echo -en '\n'
  echo "Setting permissions!"

  #Uses previously created array to set permissions
  for i in "${arr[@]}"; do
    chmod 700 /opt/gitupdate/staging/"$i"
    echo -en '\n'
    echo "Completed permissions settings for "$i""
  done

  #Copy staging to deployed, overwriting any files
  echo -en '\n'
  echo "Deploying the staging directory!"
  cp /opt/gitupdate/staging/* /opt/gitupdate/deployed

  #Symlinks all files in directory to /usr/local/bin
  echo -en '\n'
  echo "Cleaning up and creating symbolic links!"

  #Uses previously created array to cleanup and create symlinks
  for i in "${arr[@]}"; do
    rm -rf /usr/local/bin/"$i"
    ln -s /opt/gitupdate/deployed/"$i" /usr/local/bin
    echo -en '\n'
    echo "Created link for "$i""
  done

  #Cleaup step
  echo -en '\n'
  echo "All tasks completed!"
  exit
}
