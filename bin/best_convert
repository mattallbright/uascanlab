#!/bin/bash
#new_convertit
#Created by Matt Allbright

#Welcome
echo -en '\n'
echo -e "\e[0;31mWelcome to best_convert This simple UNIX script will \e[0m"
echo -e "\e[0;31mquickly convert dcm images to nifti, move and rename those nifti images to \e[0m"
echo -e "\e[0;31mtheir respective individual analysis directory, and prepare them for analysis \e[0m"
echo -e "\e[0;31min SPM. This version will populate all images (BOLD and anatomical) for all \e[0m"
echo -e "\e[0;31mtasks for a given participant.\e[0m"
echo -e "\e[0;31mType ctrl+c at any time to stop the script. \e[0m"
echo -en '\n'
echo "Created by Matt Allbright"

#Unset values
unset STUDY
unset RAW_data
unset VISIT
unset PARTIC
unset TASKVALUE
unset TASK
unset BOLDVALUE
unset BOLDDONE
unset ANATSTRING
unset ANAT
unset NumbAnat
unset ISBOTH

cd /data/

#Choose Study
echo -en '\n'

#Create study array for possible studies
studydirarray=(*/)

#Checks if folders exist in base directory, then asks for study folder.
if [[ -n ${studydirarray[*]} ]]; then

	echo -en '\n'
	echo -e "\e[0;31mWhat is the name of the study?\e[0m"
	echo "Be aware that each of these is a folder name"
	echo "and that certain folders might not be studies."
	echo -en '\n'
	echo -e "If your study does not exist, type '\e[0;31mDNE\e[0m' to"
	echo "create a new study."
	echo -en '\n'

	select STUDY in ${studydirarray[*]}
	do
		#If inputting correct study value
		if [[ $STUDY ]]; then
			break

		#New study creation, occurs if user input 'new'
    elif [[ $REPLY == "DNE" ]]; then
  			unset
  			echo -en '\n'
  			echo -e "\e[0;31mYou are creating a new study.\e[0m"
  			echo -e "If you are seeing this screen by mistake, type '\e[0;31mback\e[0m'"
  			echo "to return to the main menu. Else, type the name of the new study."
  			echo -en '\n'
  			while read STUDY; do

  				#Study already exists error
  				if [[ -d /data/$STUDY ]]; then
  					echo "This is already a valid study. Please input"
  					echo "a new study or type 'back' to return to the main menu."
  					echo -en '\n'

  				#Sends user back to main menu
  				elif [[ $STUDY == "back" ]]; then

            #Restarts the study questionaire
            for STUDYDIR in ${studydirarray[*]}
            do
            	echo printf "%s\n" $STUDYDIR
            done

            echo -en '\n'
            echo -e "\e[0;31mWhat is the name of the study?\e[0m"
            echo "Be aware that each of these is a folder name"
            echo "and that certain folders might not be studies."
            echo -en '\n'
            echo -e "If your study does not exist, type '\e[0;31mDNE\e[0m' to"
            echo "create a new study."
            echo -en '\n'
            break

  				#Makes directory based on user input
  				else
  					echo "A new directory with name "$STUDY" will be created."
            STUDY=$NEWSTUDY
  					exit
  				fi
  			done

  		#Fails if user input selects nonvalid study
  		else
  			echo -e "Nonvalid study. \e[0;31mPlease type in a valid study.\e[0m"
  		fi
  	done

#This is not a priority
#If no folders exist in base folder, it will prompt for new study creation
else
  echo "There appear to be no valid studies. To create a"
  echo -e "new study, just \e[0;31mtype the name of your study.\e[0m"
  read NEWSTUDY
  STUDY=$NEWSTUDY
fi

#Most people will never see this, so it's WIP indefinitely
#New study folder basic creation based on previous read value
if [[ -n $NEWSTUDY ]] && [[ ! -d /data/$STUDY ]]; then
	mkdir -p $STUDY/RAW_data
	mkdir -p $STUDY/individual_analysis

	echo "Welcome to a new study creation session."
	echo "RAW_data and indiv_analysis have been created"
	echo -e "for you. Create more directories? \e[0;31my/n\e[0m"
	echo -en '\n'
	read NEWSTUDYFOLDER

	#If user chooses yes to create more directories it will initialize a file which tracks all folders
	if [[ $NEWSTUDYFOLDER == "y" ]]; then

		#New study folder creation (More directories edition)
		while [[ $DIRCREATEDONE == "n" ]]; do
			ls -d /$STUDY
			echo -en '\n'
			echo "Type in a directory name to create it."
			read NEWDIRVALUE

			mkdir $STUDY/"$NEWDIRVALUE"

			echo -en '\n'
			ls -d /$STUDY
			echo -en '\n'

			#Ending prompt
			echo -e "Does this complete the new directory setup? \e[0;31my/n\e[0m"
			while read DIRCREATEDONE; do
				if [[ $DIRCREATEDONE == "y" ]] || [[ $DIRCREATEDONE == "n" ]]; then
					break
				else
					echo "Please enter y/n."
				fi
			done
			echo -en '\n'
		done

	#If user okays that indiv_analysis and RAW_data are the only folders
	elif [[ $NEWSTUDYFOLDER == "n" ]]; then
		break

	#if user enters wrong value
	else
		echo "Please enter y/n."
	fi
fi

#Debug msg
echo -en '\n'
echo -e "$STUDY was selected, beginning process steps."

#Verify X skeleton
echo -e "\n\e[0;31mVerifying 'X' skeleton validity.\e[0m"

#X creation wizard begins
if [[ -n $NEWSTUDY ]]; then
  mkdir -p $STUDY/indiv_analysis/x/3danat_rest

  echo "'X' setup not found. Initializing 'X' creation session."
  echo -en '\n'
  echo "Welcome to a new 'X' skeleton session."
  echo "'X' is how we determine what analyses should be processed."
  echo "Rest has been created."
  echo -e "for you. Create more directories? \e[0;31my/n\e[0m"
  echo -en '\n'
  read NEWXFOLDER

	#If user chooses yes to create more directories it will initialize a file which tracks all folders
	if [[ $NEWXFOLDER == "y" ]]; then

		#New study folder creation (More directories edition)
		while [[ $XDIRCREATEDONE == "n" ]]; do
			ls -d /$STUDY/indiv_analysis/x
			echo -en '\n'
			echo "Type in a directory name to create it."
			read NEWXVALUE

			mkdir $STUDY/indiv_analysis/x/"$NEWXVALUE"

			echo -en '\n'
			ls -d /$STUDY/indiv_analysis/x
			echo -en '\n'

			#Ending prompt
			echo -e "Does this complete the new directory setup? \e[0;31my/n\e[0m"
			while read XCREATEDONE; do
				if [[ $XCREATEDONE == "y" ]] || [[ $XCREATEDONE == "n" ]]; then
					break
				else
					echo "Please enter y/n."
				fi
			done
			echo -en '\n'
		done

	#If user okays that indiv_analysis and RAW_data are the only folders
	elif [[ $NEWXFOLDER == "n" ]]; then
			break

	#if user enters wrong value
	else
		echo "Please enter y/n."
	fi

#If X looks good, break
else
	echo -e "'X' skeleton looks good. Continuing...\n"

fi

#Choose Participant
cd $STUDY/RAW_data

#Blurb about participants
echo -e "\e[0;31mThe following are a list of possible participants.\e[0m"
echo -e '\n'


#Create participant array for valid participants
particdirarray=`(ls -f | grep -Eo '[0-9][0-9][0-9]')`

for PARTICDIR in "${particdirarray[@]}"
do
   echo "$PARTICDIR"
   # or do whatever with individual element of the array
done

#Determine if array exists
if [[ -n ${particdirarray[*]} ]]; then

	echo -en '\n'
	echo -e "\e[0;31mWhich participant?\e[0m"
	echo "Be aware that participants who are currently"
	echo "not setup on this terminal may not appear."
	echo -e "For new participants, please type '\e[0;31mnew\e[0m'."
	echo -en '\n'

	while read PARTIC; do

		if [[ ${particdirarray[@]} =~ $PARTIC ]]; then
			break

		#New partic creation
		elif [[ $PARTIC == "new" ]]; then
			echo -en '\n'
			echo -e "\e[0;31mType in the number of the new participant.\e[0m"
			read NEWPARTIC
			PARTIC=$NEWPARTIC

		else
			echo -e "Nonvalid participant. \e[0;31mPlease type in a valid participant number.\e[0m"

		fi
	done

else
	echo -e "There appear to be no participants. \e[0;31mType in a number of\e[0m"
	echo -e "\e[0;31ma participant to begin processing.\e[0m"
	read PARTIC
fi

echo "You have selected participant $PARTIC."
echo -e '\n'
echo "Moving on..."
echo -e '\n'
echo "Please select the schedule for the study."
echo "This step will most likely be placed in Study Creation in future revisions."
echo -en '\n'

# #Choose Longitudinal or Single Visit
# echo -en '\n'
# echo -e "One-Day Visit (\e[0;31m1\e[0m) or Longitudinal Study (\e[0;31m2\e[0m)?"
# while read VISITTYPE; do
# 	if [[ $VISITTYPE == "1" ]] || [[ $VISITTYPE == "2" ]]; then
# 		break
# 	else
# 		echo "Please enter a valid visit type."
# 	fi
# done
#
# if [ $VISITTYPE -eq "1" ]; then
# 	VISIT=dayofscan
#
# elif [ $VISITTYPE -eq "2" ]; then
#
# 	#Choose Visit
# 	echo -en '\n'
# 	echo -e "Which visit (either \e[0;31mBaseline\e[0m or \e[0;31mPostTX\e[0m or \e[0;31mBoth\e[0m)?"
# 	while read VISIT; do
# 		if [[ $VISIT == "Baseline" ]] || [[ $VISIT == "PostTX" ]] || [ $VISIT == "Both" ]; then
# 			break
# 		else
# 			echo "Please enter a valid visit."
# 		fi
# 	done
# fi
#
# echo -en '\n'

#Janky way of doing the previous commented out stuff, prob won't use [[[[[[ALSO HIGHLY UNFINISHED]]]]]]
# if [[ -n $(`find ../indiv_analysis/x -maxdepth 3 -name dayofscan`) ]]; then
# 	VISIT=dayofscan
#
# elif [[ -n $(`find ../indiv_analysis/x -maxdepth 3 -name Baseline`) ]] && if [[ -n $(`find ../indiv_analysis/x -maxdepth 3 -name PostTX`) ]]; then
# 	VISIT=

###WHOLE SECTION WILL REQUIRE CHANGE WITH USE OF OLD DATASETS (ABRC, blt, emot, EWM, tbimodel) AND NEW STUDIES

#Test for specifically BLHC, healthy controls will likely be in this section
if [[ $STUDY == *"BLHC"* ]]; then
	VISIT=dayofscan

#Test for all other non-healthy study individuals
elif [[ $STUDY == *"BL2"* ]] || [[ $STUDY == *"ICBT"* ]] || [[ $STUDY == *"BLPTSD"* ]] || [[ $STUDY == *"TBIMODEL"* ]]
	echo -en '\n'
	echo -e "Which visit (either \e[0;31mBaseline\e[0m or \e[0;31mPostTX\e[0m or \e[0;31mBoth\e[0m)?"

	#Stick user in a question loop
	while read VISIT; do
		if [[ $VISIT == "Baseline" ]] || [[ $VISIT == "PostTX" ]] || [ $VISIT == "Both" ]; then
			break
		else
			echo "Please enter a valid visit."
		fi
	done

#Copy Hermes to local
#Convert dcm2nii
#Move to proper folders based on x skeleton
